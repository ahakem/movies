{"version":3,"sources":["store/index.js","componenets/layout/index.js","store/movies/actions.js","store/movies/reducer.js","store/rootReducer.js","config/axios.js","componenets/MovieCard/style.js","componenets/MovieCard/index.js","screens/MoviesPlaceHolder.js","screens/Movies.js","screens/Favorites.js","config/theme.js","App.js","serviceWorker.js","index.js"],"names":["store","Layout","props","children","React","useState","value","setValue","Container","sx","marginTop","marginBottom","maxWidth","Paper","zIndex","position","bottom","left","right","elevation","BottomNavigation","showLabels","onChange","event","newValue","BottomNavigationAction","component","Link","to","label","icon","moviesActionTypes","unstarMovie","data","type","movies","state","moviesList","favoritMovies","action","cloneArrayStar","JSON","parse","stringify","index","findIndex","movie","id","favorit","cloneArrayUnstar","indexToRemove","filter","rootReducer","combineReducers","initStore","preloadedState","createStore","composeWithDevTools","applyMiddleware","useStore","initialState","useMemo","_store","getState","undefined","window","initializeStore","axios","interceptors","request","use","config","err","Promise","reject","API","endpoint","process","BoxHeader","styled","CardHeader","fontSize","fontWeight","whiteSpace","MovieCard","handleRemoveMovie","handleLikeMovie","Grid","item","xs","sm","md","lg","xl","Card","title","subheader","dayjs","release_date","format","CardMedia","height","image","poster_path","notFound","alt","CardContent","Box","display","justifyContent","alignItems","IconButton","onClick","color","Badge","badgeContent","vote_average","MoviesPlaceHolder","container","spacing","Array","map","m","Skeleton","animation","width","style","variant","Fragment","connect","dispatch","init","initMovies","add","starMovie","remove","useEffect","length","get","then","response","results","catch","error","console","log","favoritesList","theme","createTheme","palette","primary","pink","secondary","yellow","App","ThemeProvider","exact","path","Boolean","location","hostname","match","ReactDOM","render","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.39e4d41e.chunk.js","sourcesContent":["import rootReducer from './rootReducer'\nimport { useMemo } from 'react'\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nlet store\n\nfunction initStore(preloadedState = {}) {\n  return createStore(\n    rootReducer,\n    preloadedState,\n    composeWithDevTools(applyMiddleware())\n  )\n}\n\nexport const initializeStore = (preloadedState) => {\n  let _store = store ?? initStore(preloadedState)\n\n  // After navigating to a page with an initial Redux state, merge that state\n  // with the current state in the store, and create a new store\n  if (preloadedState && store) {\n    _store = initStore({\n      ...store.getState(),\n      ...preloadedState,\n    })\n    // Reset the current store\n    store = undefined\n  }\n\n  // For SSG and SSR always create a new store\n  if (typeof window === 'undefined') return _store\n  // Create the store once in the client\n  if (!store) store = _store\n\n  return _store\n}\n\nexport function useStore(initialState) {\n  const store = useMemo(() => initializeStore(initialState), [initialState])\n  return store\n}","import React from \"react\";\n\nimport Container from \"@mui/material/Container\";\n\nimport { Paper } from \"@mui/material\";\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\nimport BottomNavigationAction from \"@mui/material/BottomNavigationAction\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport MovieIcon from \"@mui/icons-material/Movie\";\nimport { Link } from \"react-router-dom\";\nconst Layout = (props) => {\n  const { children } = props;\n  const [value, setValue] = React.useState(0);\n  return (\n    <>\n      <main>\n        <Container sx={{ marginTop: 4, marginBottom: 12 }} maxWidth=\"xl\">\n          {children}\n        </Container>\n      </main>\n      <Paper\n        sx={{ zIndex: 1, position: \"fixed\", bottom: 0, left: 0, right: 0 }}\n        elevation={3}\n      >\n        <BottomNavigation\n          showLabels\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n        >\n          <BottomNavigationAction\n            component={Link}\n            to=\"/\"\n            label=\"Now Playing\"\n            icon={<MovieIcon />}\n          />\n          <BottomNavigationAction\n            component={Link}\n            to=\"/fav\"\n            label=\"Favorites\"\n            icon={<FavoriteIcon />}\n          />\n        </BottomNavigation>\n      </Paper>\n    </>\n  );\n};\nexport default Layout;\n","export const moviesActionTypes = {\n    INIT_MOVIES: 'INIT_MOVIES',\n    STAR_MOVIE: 'STAR_MOVIE',\n    UNSTAR_MOVIE: 'UNSTAR_MOVIE',\n  }\n  \n  export const initMovies = (data) => {\n    return { \n      type: moviesActionTypes.INIT_MOVIES,\n      data: data,\n    }\n  }\n  \n  export const starMovie = (data) => {\n    return { \n      type: moviesActionTypes.STAR_MOVIE,\n      data: data,\n    }\n  }\n\n  export const unstarMovie = (data) => {\n    return { \n      type: moviesActionTypes.UNSTAR_MOVIE,\n      data: data,\n    }\n  }\n  \n ","import { moviesActionTypes } from \"./actions\";\n\nconst movies = (state = { moviesList: [], favoritMovies: [] }, action) => {\n  switch (action.type) {\n    case moviesActionTypes.INIT_MOVIES:\n      return {\n        ...state,\n        moviesList: [...action.data],\n      };\n\n    case moviesActionTypes.STAR_MOVIE:\n      const cloneArrayStar = JSON.parse(JSON.stringify(state));\n      const index = cloneArrayStar.moviesList.findIndex(\n        (movie) => movie.id === action.data\n      );\n      cloneArrayStar.moviesList[index].favorit = true;\n      return {\n        ...cloneArrayStar,\n        favoritMovies: [\n          ...cloneArrayStar.favoritMovies,\n          cloneArrayStar.moviesList[index],\n        ],\n      };\n\n    case moviesActionTypes.UNSTAR_MOVIE:\n      const cloneArrayUnstar = JSON.parse(JSON.stringify(state));\n      const indexToRemove = cloneArrayUnstar.moviesList.findIndex(\n        (movie) => movie.id === action.data\n      );\n      cloneArrayUnstar.moviesList[indexToRemove].favorit = false;\n      return {\n        ...cloneArrayUnstar,\n        favoritMovies: cloneArrayUnstar.favoritMovies.filter(\n          (movie) => movie.id !== action.data\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default movies;\n","import { combineReducers } from 'redux'\nimport movies from './movies/reducer'\n\nconst rootReducer = combineReducers({\n    movies,\n\n})\nexport default rootReducer","import axios from \"axios\";\n\nconst API_KEY = process.env.REACT_APP_THE_MOVIE_DB_KEY;\naxios.interceptors.request.use(\n  (config) => ({\n    ...config,\n  }),\n  (err) => Promise.reject(err)\n);\n\nexport default axios;\n\nexport const API = {\n    movies : (endpoint)=> `https://api.themoviedb.org/3/movie/${endpoint}?api_key=${API_KEY}`,\n};\n","import { styled } from '@mui/material/styles';\nimport { CardHeader} from '@mui/material';\n\n\nexport const BoxHeader = styled(CardHeader)({\n    '& .MuiCardHeader-title':{\n        fontSize: 16,\n        fontWeight:'bold',\n        whiteSpace: 'nowrap'\n    }\n  });","import React from \"react\";\nimport {\n  Grid,\n  CardMedia,\n  CardContent,\n  Card,\n  IconButton,\n  Badge,\n  Box,\n} from \"@mui/material\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport StarsIcon from \"@mui/icons-material/Stars\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport dayjs from \"dayjs\";\nimport { BoxHeader } from \"./style\";\nimport notFound from '../../assets/imgs/not-found.png'\nconst MovieCard = ({ movie, handleRemoveMovie, handleLikeMovie }) => {\n  return (\n    <Grid item xs={12} sm={6} md={4} lg={3} xl={3}>\n      <Card>\n        <BoxHeader\n          title={movie.title}\n          subheader={`Release Date: ${dayjs(movie.release_date).format(\n            \"MMM D, YYYY\"\n          )}`}\n        />\n        <CardMedia\n          component=\"img\"\n          height=\"194\"\n          image={`https://www.themoviedb.org/t/p/w440_and_h660_face/${movie.poster_path}` || notFound}\n          alt={movie.title}\n        />\n        <CardContent>\n          <Box display=\"flex\" justifyContent=\"space-around\" alignItems=\"center\">\n            {movie.favorit ?\n            <IconButton onClick={()=>{handleRemoveMovie(movie.id)}} aria-label=\"Remove to favorites\">\n              <FavoriteIcon color=\"primary\" />\n            </IconButton>:\n            <IconButton onClick={()=>{handleLikeMovie(movie.id)}} aria-label=\"Add from favorites\">\n            <FavoriteBorderIcon />\n          </IconButton>\n            }\n            <Badge color=\"secondary\" badgeContent={movie.vote_average}>\n              <StarsIcon />\n            </Badge>\n          </Box>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\nexport default MovieCard;\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport {Skeleton, Card, CardHeader, CardContent} from \"@mui/material\";\nconst MoviesPlaceHolder = (props) => {\n  return (\n    <>\n      <h1> Movies List</h1>\n      <Grid container spacing={4}>\n        {[...Array(8)].map((item, index) => (\n          <Grid key={index} item xs={12} sm={6} md={4} lg={3} xl={3}>\n            <Card sx={{ m: 2 }}>\n              <CardHeader\n                title={\n                  <Skeleton\n                    animation=\"wave\"\n                    height={10}\n                    width=\"80%\"\n                    style={{ marginBottom: 6 }}\n                  />\n                }\n                subheader={\n                  <Skeleton animation=\"wave\" height={10} width=\"40%\" />\n                }\n              />\n              <Skeleton\n                sx={{ height: 190 }}\n                animation=\"wave\"\n                variant=\"rectangular\"\n              />\n\n              <CardContent>\n                <React.Fragment>\n                  <Skeleton\n                    animation=\"wave\"\n                    height={10}\n                    style={{ marginBottom: 6 }}\n                  />\n                  <Skeleton animation=\"wave\" height={10} width=\"80%\" />\n                </React.Fragment>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nexport default MoviesPlaceHolder;\n","import React, { useEffect } from \"react\";\nimport axios, { API } from \"../config/axios\";\nimport { Grid } from \"@mui/material\";\nimport MovieCard from \"../componenets/MovieCard/index\";\nimport { connect } from \"react-redux\";\nimport { initMovies, starMovie, unstarMovie } from \"../store/movies/actions\";\nimport MoviesPlaceHolder from './MoviesPlaceHolder'\nconst Movies = (props) => {\n  const { init, moviesList, add, remove } = props;\n  const fetchData = () => {\n    axios\n      .get(API.movies(\"now_playing\"))\n      .then(function (response) {\n        // handle success\n        init(response.data.results);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n  };\n  useEffect(() => {\n    moviesList.length == 0 && fetchData();\n  }, []);\n\n  if (!moviesList || moviesList.length === 0) {\n    return (<MoviesPlaceHolder />);\n  }\n  return (\n    <>\n      <h1> Movies List</h1>\n      <Grid container spacing={4}>\n        {moviesList.map((movie) => (\n          <MovieCard\n            handleRemoveMovie={(id) => {\n              remove(id);\n            }}\n            handleLikeMovie={(id) => {\n              add(id);\n            }}\n            key={movie.id}\n            movie={movie}\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    moviesList: [...state.movies.moviesList],\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    init: (data) => dispatch(initMovies(data)),\n    add: (data) => dispatch(starMovie(data)),\n    remove: (id) => dispatch(unstarMovie(id)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Movies);\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\nimport MovieCard from \"../componenets/MovieCard/index\";\nimport { connect } from \"react-redux\";\nimport { unstarMovie } from \"../store/movies/actions\";\n\nimport { Link } from \"react-router-dom\";\nconst Favorites = (props) => {\n  const { favoritesList, remove } = props;\n\n  if (favoritesList.length === 0) {\n    return (\n      <center>\n        <p>\n          you don't have any Movie in your list, you can add one from{\" \"}\n          <Link to=\"/\"> Movies List</Link>{\" \"}\n        </p>\n      </center>\n    );\n  }\n  return (\n    <>\n      <h1> My Favorits</h1>\n      <Grid container spacing={4}>\n        {favoritesList.map((movie) => (\n          <MovieCard\n            handleRemoveMovie={(id) => {\n              remove(id);\n            }}\n            key={movie.id}\n            movie={movie}\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    favoritesList: [...state.movies.favoritMovies],\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    remove: (id) => dispatch(unstarMovie(id)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);\n","import { createTheme } from \"@mui/material/styles\";\nimport { pink, yellow } from \"@mui/material/colors\";\n\nexport const theme = createTheme({\n  palette: {\n    primary: pink,\n    secondary: yellow,\n  },\n});\n","import React from \"react\";\n\nimport { Provider } from \"react-redux\";\nimport Layout from \"./componenets/layout\";\nimport { useStore } from \"./store\";\nimport Movies from \"./screens/Movies\";\nimport Favorites from \"./screens/Favorites\"\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {  ThemeProvider,  } from '@mui/material/styles';\nimport {theme} from './config/theme'\nexport default function App() {\n  const store = useStore();\n\n  return (\n    <Provider store={store}>\n      <Router>\n      <ThemeProvider theme={theme}>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/\">\n              <Movies />\n            </Route>\n            <Route exact path=\"/fav\">\n              <Favorites/>\n            </Route>\n            <Route path=\"*\">\n              <center>No found page Goes here!</center>\n            </Route>\n          </Switch>\n        </Layout>\n        </ThemeProvider>\n      </Router>\n    </Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </React.Fragment>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}